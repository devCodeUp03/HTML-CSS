// initial setup for each project
1. git init (for git initilization)
2. git remote add origin <url of your repository>     Note: these commands are case sensative
    to change >git remote set-url origin https://github.com/sagartmg2/mangsir-2(repository's url)
2.1 to check wheather step 2 is working or not
    git remote -v

//regular codes
1. git status (compare online code with local code) [optional command]
2. git add . (to add all the files and folders to the staging area)
2.1 git add <file-name> - to add a single file to the staging area
3. git commit -m "<commit message>"
4. git push(-u origin master) - we can use -u flag instead of --set-upstream -> this is used to make sure we don't have to repeat 'origin master' all the time
5. git commit -a -m "<commit message>" - to directly commit all the files without going through a staging area

//branches
1. git branch - to view different branches
2. git checkout <name-of-the-branch> - to switch branch
3. git checkout -b <branch-name> - to create a new branch
4. git branch -d <branch-name> - to delete the branch
5. git branch -M <new-name> - to rename the branch

//merge
1. git diff <branch-name> - to check difference with the branch
2. git merge <branch-name> - to merge one branch with another

//clone
1. git clone <url-of-the-repo> - to copy the given repo to the local computer/machine
2. git pull - to pull only the changes in the cloned repo

//Configuration
1. git config --global user.name "<name>" - to set name
2. git config --global user.email "<email>" - to set email
3. git config user.name - to see set name
4. git config user.email - to see set email

//
ctrl + c - to end the process
//for making sure you are able to pull
git restore . - to restore the changes
git clean -f -d -> to delete new files 

term - merge conflict

// for open source contribution
1. fork 2. clone 3. do some changes in the code 4. commit and push 5. do pull request

//for collaboration
1. go to your particular repository you want people to collarate in
2. go to the settings and click Collarators
3. add people either with their username, email or full name
Note: after collaboration that person you have added can "push the changes" as well