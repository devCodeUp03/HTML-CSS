Day 2: [Mangsir 18, 2080]
Homework:
    Research on relative vs absolute path

Day 3:
/index.html or index.html is not the right approach
./ is the right approach to write the pathing also works with react
./ points to the parent folder
../points to the parent of the parent
../../ goes even one level higher and so on
&nbsp; -> non-breaking space (a space that will not break into a new line)
ctrl + space for getting suggestion in pathing or '/' or './' as well as in other scenario
ctrl + click in a hyperlink will open the link in the new tab even if target is not set to '_blank'


Day 4:
    Normally there should only be one h1 in one html page
    also it is not a good practice to write h3 before h2 for seo related issues
    changing code means refractoring it
    ctrl + enter to directly go to the next line
    alt + shift + down arrow to copy down the selected line of code/text
    alt + down or up arrow to move line down and up respectively
    fn + f2 to change the name of the tag directly(opening and closing tag)
    ctrl + b to close the side bar or open the side bar
    ctrl + x, end key
    block element takes space more than required space or a whole line in other words eg: h1, p etc
    inline element takes only the required space eg: anchor tag, img tag etc


    we learnt about list and table today

    homework:
        make a table given by sagar sir
        hint: concept that will be used is rowspan and colspan

Day 5:
    There are three ways you can add css:
        a. inline css(using style attribute)
        b. internal css(using style tag)
        c. external css(using css file and linking with the html file)
        alt stands for alternative text
        css debugging is finding out where the css is coming from by going to inspect
    homework:
        research margin and padding also complete the given table design

Day 5:
    types of elements:
        i.block elements eg: p, heading tags
        ii. inline elements eg: anchor tag, image element, span
        iii. inline-block elements
    semantic tag helps to recognize code without seeing the actual code as they signify the meaning by themselves
    There are various types of selectors namely: 
                                    element, id, class, combination of selectors
    when children is being target using parent for applying css, it is called descendant selectors 
        it is achieved using by using space betweent two tags 
                example: header ul li, nav ul etc...
        Note: we prefer CLASS in css in the place of ID normally...
        because class is reusable also a single element can have any number of classes or be part of any number of classes
        kebab-case naming convention: lowercase letters separate by hypen for words

       Note: block element shouldn't be inside inline element
       use span tag to style the portion of an element
       homework: 
                do the design given

Day 6: 
    windows + v to view and use all the latest copied text on the clipboard
    ctrl + p to get a search bar for files in vs code
    css overriding concepts 

Day 7:
    External css to employ the principle of DRY(Do Not Repeat)
    External css can be used multiple times as it can be reused simple by linking to the given page
    if there is a common design across multiple files/pages external css is used
    and internal css for unique design within the page
    alt + shift + I for multi-cursor in selected lines and use home and end key to control
    homework: 
        find the difference between rem and em 
        find out why we use box-sizing: border-box;
        universal selectors

    percentage, rem and em are relative units of measurement...
    percentage and em are relative to the font-size of the parent element in which font-size is defined
    while rem is relative to the root font size i.e 16px by default
    :root selector to select the highest level parent i.e html here you can change the font-size of the root
    box-sizing: border-box includes padding and border in the specified height and width of the element
    while the default value of box-sizing is 'content-box' in which the height and width applied is only applicable to the content excluding padding and border
    short-cuts: ctrl + shift + c to open inspect
            similarly ctrl + shift + j to close inspect, this same short cut also directly opens console

Day 8:
    Lorem picsum for pictures
    mydevice.io for finding device resolution
    we use vh but not vw instead we use % because vw normally create a horizontal scroll problem
    ipconfig in terminal to open in mobile brower ip:..../units.html
    a.active(class) anchor tag in which there is a active class, there is no space. This type of selector is also called and selector
    color: hex value, rgb value, rgba for opacity too etc
    tomorrow's topic : git`

Day 9: 
    dir - to list directories
    .md - mark down (extension)
    cd - to change directory
    cls - to clear
Day 10: 
    read more about git and github
    read about cloning, forking etc

Day 11:
    flexbox
    gap property - to create gap between children elements
    display - flex and grid are used to utilize the space present in parent container
    There are two axis in flex - namely main-axis and cross-axis
    justify-content is used to move children in main-axis.
    space-between is widely used

    parent is called flexbox and children are called flex items.
    (widely used: flex-start, center, end, space-between)

    for cross-axis: align-items are used (widely used values are: start, end and center)
    
    homework: 
       for parent: flex-direction, flex-wrap
       for children: flex-grow, order
       bootstrap container class 


Day 12: 
    no class

Day 13:
    overflow: hidden property in flexbox
    flex-wrap: is used to wrap the flex items in the flexbox
    by default children are stretched in flexbox
    when there is multiple row of children, note: we can use align-content(however this property in now really used so much)->flex-wrap works side-by-side
    how selectors work, what happens when there is space between selectors and what happens otherwise and so on
    eg: p.child(paragraph tag which contains child class) vs p .child(paragraph inside which child has a class of "child")
    Look for the unique thing for selection or selector

Day 14:
    pseudo-class and pseudo-element(it is called element because it adds the new content or element like altogether)
    css position property:
        1.static
        2.relative
        3.absolute
        4.fixed
        5.sticky

    short cut: shift+alt + i, ctrl + left-right to move across the words

Day 15:
    positioning
    1.relative (element can be moved relative to it's original position)
    2.absolute (element moves relative to it's nearest non-static parent)
    3.fixed is like absolute but remains fixed in it's position(it is relative to hmtl/screen)
    4.Sticky is like fixed but to make it work we need to tell the element when to stop by adding some properties like top, bottom etc
    
    universal selector(*)
    margin-left and right auto to center the element
    firefox browser for mobile responsive
    box-sizing: border-box
    margin can also be given negative values but not in case of padding
    overflow: hidden(remember this property for good)
    fixed doesn't remain under the relative parent
    absolute remains under the all parent's except from the parent that is static
    line-height property 
    iconmonstr for icons
    appearance: none
    .container utility class

Day 16:
    when a flex-item is given position of absolute, it stops to function as a flex-item
    when we position an element of sticky, it looks for the parent but does not care the position of the parent
    sticky property also asks for top property

    sans-serif(content)
    serfif fonts(title)
    z-index -> is used to compare between siblings and the property is applied
    different fonts from google fonts

Day 17:
    media queries
    zoom in and out feature in firefox ctrl +/-
    in mobile first approach, your code is less in some sense


Day 18:
    saturday

Day 19:
    Sir tonsil

Day 20: 
    Monday

Day 22:
for .container class values while using tailwind breakpoints
// convert them to proper css
min-width:1536px then .container max-width = 1458px
min-width:1280px then .container max-width = 1216px
min-width:1024px then .container max-width = 990px
min-width:768px then .container max-width = 720px
min-width:640px then .container max-width = 600px


.container class in bootstrap
grid garden
transform property in css
transition in css for animations
css variables

box-shadow & text-shadow property

day 23: 
    negative margin was used before grid came in css
    grid-box
    with fragment unit in grid, horizontal scrolling is avoided then other units
    repeat function
    grid track (tracks can be  positive as well as negative)
    grid-auto-flow
    grid-row-start grid-row-end etc
    span 2 span 3
    grid-row: span 2(widely used)
    most used grid properties:
        grid-template-columns,  grid-row, grid-column

day 24:
    grid revised with grid garden
    specificity-score in css
    -> class has higher priority than a tag(id > class > id)
    0 0 0 (id class tag)
    used to override css
    similarly inline css > internal > external(in terms of priority)
    !important flag
    a little about animations
    if you want to have transition while both going and coming back write css in the child itself on hover


day 25:
    jpg - has some background
    png - has transparent background
    svg is a vector image, doesn't get blur howmuchever zoom is done
    alt + shift + r - opens image in its folder
    typescale.com 
    hamburger menu-size: 24px, 32px, 48px

day 26:
    onclick in js 
    flex-grow
    back-drop concept
    brootstrap modal
    css variables
    and from tomorrow we start javascript
    
day 27:
    alt + shift + a -> for multiline comment
    ctrl + / -> for single line comment
    why is variable used ?
    ->it is used to reuse the code and make code easy to change the value all at once, create once use again and again
    auto semi-colon concept in js
    ctrl + shift + p -> to open vs code setting
    minimap toggle
    ctrl + tab > to switch between file in vs code
day 28:
    variable overriding
    code executes line by line from top to bottom
    variable declaration and initialization concept
    variable made from "var" keyword can be redeclared however cannot be redeclared only re-initialized
    var let const
    2015 - es6 js version
    new keywords like let and const were brought about
    const variable name is usually written in uppercase plus SNAKE_CASE
    always try and error
    array and indexing in array

day 29:
    revision
    donot repeat yourself concept
    give a meaningful variable name
    write the array name in plural noun
    node <js filename> to run in the terminal
    array should have similar data type
    adding new element in an array
    sansari maya bichitra


day 30:
    object and how to create them
    object doesn't contain index, it contains key-value pair
    key, attribute or property in object is all the same
    array of objects
    accessing the property of the object and making changes
    ctrl + g  -> to get a search bar for searching line


day 31:
    multidimensional array and object(in other words: nested array and object)
    whenever we need to add more information, create an object
    when there are mutiply things, make an array
    while accessing do it one by one from top to bottom
    research on function

day 32: 
    use console.log to format the user interfaces like Bibek did in the group
    consistency in array and object must be maintained
    concept of nested object and nested array and mixture of both

day 33: 
    function
    string literal or template literal
    don't use + or , to print, rather use back-tick or string literals
    /** + enter to write comment about function or functional comment
    parameters and argument
    principle of DRY (Donot Repeat Yourself)

day 34:
    the parameters in a function corresponds to the order in which arguments are passed
    function are reusable like variables

day 35: 
    saturday

day 36: 
    break sagar tmg

day 37: 
    substring string function -> substring(0, 4) returns the characters of a string from index 0 - 3 excluding 4.
    concept of object destructing let {name, age} = person; //for example
    note that the name of the attribute in the object must match with the name that is declared while destructuring hence order doesn't matter
    concept of helper function

day 38:

    we can also print a variable wrapping inside the the curly braces or in other words in the form of object (i.e if the key and value is the same)
    operators
    assignment operator(=)
    count = count + 5
    count += 5//short hand

    pre-increment and post increment:
    let number = 9;
    number++ //number is incremeted by 1 but not instantly but later//updates number in the background

    ++number //number increment by 1 and can access the updated value immediately

    arithmetic operators(+, -, *, /, %)
    note + is also used to concatenate two strings
    use of % in design
    comparison operators:
    equality operator: ==
    <, >, >=(greater or equals to), <=, !=

    logical operators:
    !, ||, &&

    conditional statements
    if, if-else also (nested if-else), if else if(does the work of nested if-else)  switch statments, ternary operators

day 39:
    /** */ for functional comments
    anything can be passed as the parameter in the function from variable, constant to the function itself(called call back function)
    concept of if else, nested if else and if else-if





 